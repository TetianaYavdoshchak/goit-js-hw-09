{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA2BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAlCMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAyBC,GACvBA,EAAMC,iBACN,IAAgCC,EAAAF,EAAMG,cAAcC,SAA5CC,EAAwBH,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACrB,GAAIF,EAAMG,MAAQ,GAAKF,EAAKE,MAAQ,GAAKD,EAAOC,OAAS,EAEvD,YADAvB,EAAAwB,OAAOC,QAAQ,6BAIjB,IADA,IAAIC,EAAcC,OAAOP,EAAMG,OACtBK,EAAI,EAAGA,GAAKN,EAAOC,MAAOK,GAAK,EAC1C1B,EAAc0B,EAAGF,GAAaG,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAC1CJ,EAAAwB,OAAOO,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,OAC3D6B,QAAMC,IAAI,uBAAwCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAEzD+B,OAAM,SAAAL,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClBJ,EAAAwB,OAAOY,QAAQ,sBAAuCJ,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,OAC1D6B,QAAMC,IAAI,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAE3DsB,GAAeC,OAAON,EAAKE,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener(\"submit\", onCreatePromise);\n\nfunction onCreatePromise(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget.elements;\n  if (delay.value < 0 || step.value < 0 || amount.value <= 0) {\n    Notify.warning('Please, enter valid data!')\n    return;\n  }\n  let resultDelay = Number(delay.value);\n  for (let i = 1; i <= amount.value; i += 1) {\ncreatePromise(i, resultDelay).then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n      .catch(({ position, delay}) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    resultDelay += Number(step.value);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay) \n  })\n};\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","value","Notify","warning","resultDelay","Number","i","then","param","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.deb3c30b.js.map"}